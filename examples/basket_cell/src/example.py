"""
Example for using the db.py module

The db.py API module provides a quick interface for writing to and loading
from different databases supported by nrnproject (currently only sqlite
but in future will include mongodb)

This example relies on the data which is generated by the simrun.py example
that is provided with nrnproject. run main.py before running this example.

In the first part of this example data is loaded via the db.py API, the 
user can be unaware of what database type is being used when using this
module.

The second part of this example uses the sqldbutils.py module
which is specific to the sqlite database.

AUTHORS:

- MIKE VELLA (2011-06-07): modified the run routine to include an example of returning output_values which are calculated for each simulation and stored in the database
"""

import db

###PART 1 - using db.py###

#collect raw data, first a loader object is created
#one experiment id can be defined for a loader object
#note:REPLACE FILEPATH


loader=db.db_loader.get_db_loader('/home/mike/dev/nrnproject/sims/output.sqlite',
				  'sqlite',experiment_id=1)

print loader.get('simulation_name') 

#example of getting an item which was result of a calculation,
#saved using writer.write method of writer object at runtime
print loader.get('example value') 

#loading the voltage-vector of a recording:
soma_voltage_2=loader.get('soma_voltage_2_mV')

#get the corresponding time-vector
t=loader.get_timeseries('soma_voltage_2_mV')

###PART 2 - using sqldbutils.py###

import sqldbutils
#note:REPLACE FILEPATH
db_path='/home/mike/dev/nrnproject/sims/outputdb.sqlite'
#create an exp_data object for that experiment
exp_data=sqldbutils.sim_data('/home/mike/dev/nrnproject/sims/output.sqlite',1)

#collect raw data,  currently only loads voltage_mV timeseries
t= exp_data.t
samples=exp_data.samples

#examples of how to extract other qyery-dependent data (sqlite database)
connection=sqldbutils.db_connect('/home/mike/dev/nrnproject/sims/output.sqlite')
query_output=sqldbutils.execute_query(connection,'SELECT experiment_id FROM output_params WHERE parameter=\'example_param_2\' AND numerical_value>1')
exp_ids=query_output.fetchall()
